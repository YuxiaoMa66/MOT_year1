"0","# Function to build the logistic regression model"
"0","library(glmnet)"
"0","library(ggplot2)"
"0",""
"0","train_and_predict_logistic_regression <- function(train_data, test_data, predictor_col) {"
"0","  y_train <- train_data[[predictor_col]]"
"0","  x_train <- as.matrix(train_data[, setdiff(names(train_data), predictor_col)])"
"0","  y_test <- test_data[[predictor_col]]"
"0","  x_test <- as.matrix(test_data[, setdiff(names(test_data), predictor_col)])"
"0","  "
"0",""
"0","  cv_results <- list()"
"0","  alpha_values <- seq(0, 1, by = 0.1)"
"0","  "
"0","  for (alpha in alpha_values) {"
"0","    cv_fit <- cv.glmnet(x_train, y_train, family = ""binomial"", alpha = alpha)"
"0","    cv_results[[as.character(alpha)]] <- cv_fit"
"0","  }"
"0","  "
"0",""
"0","  best_cvm <- Inf"
"0","  best_alpha <- NA"
"0","  best_lambda <- NA"
"0","  for (alpha in names(cv_results)) {"
"0","    print(alpha)"
"0","    cv_fit <- cv_results[[alpha]]"
"0","    if (min(cv_fit$cvm) < best_cvm) {"
"0","      best_cvm <- min(cv_fit$cvm)"
"0","      best_alpha <- as.numeric(alpha)"
"0","      best_lambda <- cv_fit$lambda.min"
"0","    }"
"0","  }"
"0","  "
"0",""
"0","  final_model <- glmnet(x_train, y_train, family = ""binomial"", alpha = best_alpha, lambda = best_lambda)"
"0","  predictions <- predict(final_model, newx = x_test, type = ""class"", s = best_lambda)"
"0","  "
"0","  accuracy <- mean(predictions == y_test)"
"0","  "
"0","  return(list(accuracy = accuracy, best_alpha = best_alpha, best_lambda = best_lambda))"
"0","}"
"0",""
"0",""
