"0","# Function to build the logistic regression model for each leaf node"
"0","library(glmnet)"
"0",""
"0","train_and_evaluate_models <- function(train_data_list, test_data_list, target_column_name) {"
"0","  alpha_values <- seq(0, 1, length.out = 5)  "
"0","  accuracy_list <- numeric(length(train_data_list))"
"0","  best_parameters <- list()"
"0","  "
"0","  for (i in seq_along(train_data_list)) {"
"0","    train_data <- train_data_list[[i]]"
"0","    test_data <- test_data_list[[i]]"
"0","    "
"0","    y_train <- train_data[[target_column_name]]"
"0","    x_train <- as.matrix(train_data[, setdiff(names(train_data), target_column_name)])"
"0","    y_test <- test_data[[target_column_name]]"
"0","    x_test <- as.matrix(test_data[, setdiff(names(test_data), target_column_name)])"
"0","    "
"0","    best_acc <- 0"
"0","    best_alpha <- NA"
"0","    best_lambda <- NA"
"0","    "
"0","    for (alpha in alpha_values) {"
"0","      cv_model <- cv.glmnet(x_train, y_train, family = ""binomial"", alpha = alpha)"
"0","      lambda <- cv_model$lambda.min"
"0","      predictions <- predict(cv_model, s = lambda, newx = x_test, type = ""class"")"
"0","      accuracy <- mean(predictions == y_test)"
"0","      "
"0","      if (accuracy > best_acc) {"
"0","        best_acc <- accuracy"
"0","        best_alpha <- alpha"
"0","        best_lambda <- lambda"
"0","      }"
"0","    }"
"0","    "
"0","    accuracy_list[i] <- best_acc"
"0","    best_parameters[[i]] <- list(alpha = best_alpha, lambda = best_lambda)"
"0","    "
"0","    cat(""Best alpha for dataset"", i, "":"", best_alpha, ""\n"")"
"0","    cat(""Best lambda for dataset"", i, "":"", best_lambda, ""\n"")"
"0","    cat(""Accuracy for dataset"", i, "":"", best_acc, ""\n\n"")"
"0","  }"
"0","  "
"0","  overall_accuracy <- mean(accuracy_list)"
"0","  cat(""Overall accuracy:"", overall_accuracy, ""\n"")"
"0","  "
"0","  return(list(overall_accuracy = overall_accuracy, best_parameters = best_parameters))"
"0","}"
"0",""
"0",""
