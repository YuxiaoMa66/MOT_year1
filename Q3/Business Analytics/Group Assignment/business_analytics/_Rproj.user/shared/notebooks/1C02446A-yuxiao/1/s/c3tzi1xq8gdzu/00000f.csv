"0","# Selection Algorithm of Variables function"
"0","select_var <- function(data, IV, DV) {"
"0",""
"0","  # compute the importance of the variables"
"0","  importance <- sapply(IV, function(x) compute_importance(data, x, DV))"
"0","  imp_info_gain <- importance$info_gain"
"0","  imp_gain_ratio <- importance$gain_ratio"
"0","  imp_gini_index <- importance$gini_index"
"0","  # scale the importance to 0-1"
"0","  imp_info_gain <- (imp_info_gain - min(imp_info_gain)) / (max(imp_info_gain) - min(imp_info_gain))"
"0","  imp_gain_ratio <- (imp_gain_ratio - min(imp_gain_ratio)) / (max(imp_gain_ratio) - min(imp_gain_ratio))"
"0","  imp_gini_index <- (imp_gini_index - min(imp_gini_index)) / (max(imp_gini_index) - min(imp_gini_index))"
"0","  "
"0","  # take the average of the 3 results"
"0","  imp_avg <- (imp_info_gain + imp_gain_ratio + imp_gini_index) / 3"
"0","  "
"0","  # pick the biggest result as the selection critera for this node"
"0","  selected_var <- IV[which.max(imp_avg)]"
"0","  "
"0","  return(selected_var)"
"0","}"
"0",""
"0","# Implement the function"
"0","Build_tree <- function(data, IV, DV, depth) {"
"0","  variables <- IV"
"0",""
"0","  if (depth == 0) return()"
"0","  "
"0","  # select the variable"
"0","  selected_var <- select_var(data, IV, DV)"
"0","  "
"0","  # split the data"
"0","  left_data <- data[data[[selected_var]] == 0,]"
"0","  right_data <- data[data[[selected_var]] == 1,]"
"0","  "
"0","  # print the selected variable"
"0","  print(paste(""Selected Variable:"", selected_var))"
"0",""
"0","  # drop the selected variable from the list of variables"
"0","  variables <- variables[!variables %in% selected_var]"
"0","  "
"0","  # # print the importance of the selected variable"
"0","  # print(paste(""Importance of the Selected Variable:"", compute_importance(data, selected_var, DV)))"
"0","  "
"0","  # print the number of observations in the left and right nodes"
"0","  print(paste(""Number of Observations in the Left Node:"", nrow(left_data)))"
"0","  print(paste(""Number of Observations in the Right Node:"", nrow(right_data)))"
"0",""
"0","  # if there are no variables left, then stop"
"0","  if (length(variables) == 0) return()"
"0","  "
"0","  # repeat the process for the left and right nodes"
"0","  Build_tree(left_data, variables, DV, depth - 1)"
"0","  Build_tree(right_data, variables, DV, depth - 1)"
"0","}"
