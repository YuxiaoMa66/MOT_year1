{"frames":[{"func":"train_and_predict_logistic_regression(train_data_new, test_data_new, \n    \"Satisfaction_dummy\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cv.glmnet(x_train, y_train, family = \"binomial\", alpha = alpha)","file":"","line_number":12,"end_line_number":12,"character_number":5,"end_character_number":77},{"func":"cv.glmnet.raw(x, y, weights, offset, lambda, type.measure, nfolds, \n    foldid, alignment, grouped, keep, parallel, trace.it, glmnet.call, \n    cv.call, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"glmnet(x[!which, , drop = FALSE], y_sub, lambda = lambda, offset = offset_sub, \n    weights = weights[!which], trace.it = trace.it, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lognet(xd, is.sparse, ix, jx, y, weights, offset, alpha, nobs, \n    nvars, jd, vp, cl, ne, nx, nlam, flmin, ulam, thresh, isd, \n    intr, vnames, maxit, kopt, family, pb)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"getcoef(fit, nvars, nx, vnames)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"apply(abs(ca) > 0, 2, sum)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in base::try(accuracy_list, silent = TRUE) : \n  object 'accuracy_list' not found\n"}