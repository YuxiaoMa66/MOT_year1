"0","# Function to build the logistic regression model for each leaf node"
"0","library(glmnet)"
"0",""
"0","train_and_evaluate_models <- function(train_data_list, test_data_list, target_column_name, lambda = 1) {"
"0","  if (length(train_data_list) != length(test_data_list)) {"
"0","    stop(""The number of training and testing datasets must be the same."")"
"0","  }"
"0","  "
"0","  accuracy_list <- numeric(length(train_data_list))"
"0","  "
"0","  for (i in seq_along(train_data_list)) {"
"0","    train_data <- train_data_list[[i]]"
"0","    test_data <- test_data_list[[i]]"
"0","    "
"0","    y_train <- train_data[[target_column_name]]"
"0","    x_train <- as.matrix(train_data[, setdiff(names(train_data), target_column_name)])"
"0","    "
"0","    y_test <- test_data[[target_column_name]]"
"0","    x_test <- as.matrix(test_data[, setdiff(names(test_data), target_column_name)])"
"0","    "
"0","    # 训练模型，使用L2正则化"
"0","    model <- glmnet(x_train, y_train, family = ""binomial"", alpha = 0, lambda = lambda)"
"0","    "
"0","    # 预测测试数据集"
"0","    predictions <- predict(model, newx = x_test, type = ""class"")"
"0","    "
"0","    # 计算并存储准确率"
"0","    accuracy_list[i] <- mean(predictions == y_test)"
"0","    "
"0","    # 打印子数据集的准确率"
"0","    cat(""Accuracy for dataset"", i, "":"", accuracy_list[i], ""\n"")"
"0","  }"
"0","  "
"0","  # 计算并打印整体准确率"
"0","  overall_accuracy <- mean(accuracy_list)"
"0","  cat(""Overall accuracy:"", overall_accuracy, ""\n"")"
"0","  "
"0","  return(overall_accuracy)"
"0","}"
"0",""
