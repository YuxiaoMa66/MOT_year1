"0","# Function to build the logistic regression model"
"0","library(glmnet)"
"0","library(ggplot2)"
"0",""
"0","train_and_predict_logistic_regression <- function(train_data, test_data, predictor_col, lambda = 1) {"
"0",""
"0","  y_train <- train_data[[predictor_col]]"
"0","  x_train <- as.matrix(train_data[, setdiff(names(train_data), predictor_col)])"
"0","  "
"0",""
"0","  y_test <- test_data[[predictor_col]]"
"0","  x_test <- as.matrix(test_data[, setdiff(names(test_data), predictor_col)])"
"0","  "
"0",""
"0","  cv_model <- cv.glmnet(x_train, y_train, family = ""binomial"", alpha = 0)"
"0","  "
"0",""
"0","  predictions <- predict(cv_model, newx = x_test, type = ""class"", s = ""lambda.min"")"
"0","  "
"0",""
"0","  accuracy <- mean(predictions == y_test)"
"0","  # print(paste(""Accuracy:"", accuracy))"
"0",""
"0","  return(accuracy)"
"0","  "
"0",""
"0","  # print("
"0","  # ggplot(data.frame(lambda = cv_model$lambda, cvm = cv_model$cvm), aes(x = log(lambda), y = cvm)) +"
"0","  #   geom_line() +"
"0","  #   labs(x = ""Log(Lambda)"", y = ""Cross-Validated Mean Squared Error"", title = ""CV Error vs. Log(Lambda)""))"
"0","}"
"0",""
"0",""
