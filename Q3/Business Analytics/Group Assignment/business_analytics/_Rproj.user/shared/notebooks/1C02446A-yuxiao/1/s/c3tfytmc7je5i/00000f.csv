"0","train_data_list_new2 <- list()"
"0","test_data_list_new2 <- list()"
"0","# Function to build the logistic regression model for each leaf node using PCA and use the same PCA model to transform the testing data"
"0","for (i in seq(length(train_data_list_new))) {"
"0","  pca_train_data <- prcomp(train_data_list_new[[i]][, setdiff(names(train_data_list_new[[i]]), ""Satisfaction_dummy"")], scale. = TRUE)"
"0","  var_explained <- cumsum(pca_train_data$sdev^2) / sum(pca_train_data$sdev^2)"
"0","  num_components <- which(var_explained >= 0.9)[1]"
"0","  "
"0","  # Transform the training data using PCA and combine with Satisfaction_dummy"
"0","  pca_train_result <- pca_train_data$x[, 1:num_components]"
"0","  train_data_list_new2[[i]] <- data.frame(pca_train_result, Satisfaction_dummy = train_data_list_new[[i]]$Satisfaction_dummy)"
"0","  "
"0","  # Apply the same PCA transformation to the testing data"
"0","  pca_test_data_transformed <- predict(pca_train_data, newdata = test_data_list_new[[i]][, setdiff(names(test_data_list_new[[i]]), ""Satisfaction_dummy"")])"
"0","  test_data_list_new2[[i]] <- data.frame(pca_test_data_transformed[, 1:num_components], Satisfaction_dummy = test_data_list_new[[i]]$Satisfaction_dummy)"
"0","}"
